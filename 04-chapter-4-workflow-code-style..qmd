---
title: "Chapter 4 - Workflow: Code style"
author: "Mardan Mirzaguliyev"
format: html
editor: visual
date: 10/10/2023
---

# Workflow: Code style

```{r}
# install.packages("styler")
library(tidyverse)
library(nycflights13)
library(styler)
```

## Names

```{r}
# Strive for:
short_flights <- flights |> filter(air_time < 60)

# Avoid:
SHORTFLIGHTS <- flights |> filter(air_time < 60)
```

## Spaces

```{r}
a <- 2
b <- 4
d <- 6
# Put spaces on either side of mathematical operators apart from ^ (i.e. +, -, ==, <, …), and around the assignment operator (<-)
# Strive for
z <- (a + b)^2 / d

# Avoid
z<-( a + b ) ^ 2/d
```

```{r}
x <- 10:50
# Don’t put spaces inside or outside parentheses for regular function calls
# Always put a space after a comma, just like in standard English
# Strive for
mean(x, na.rm = TRUE)

# Avoid
mean (x ,na.rm=TRUE)
```

```{r}
# It’s OK to add extra spaces if it improves alignment
flights |> 
  mutate(
    speed      = distance / air_time,
    dep_hour   = dep_time %/% 100,
    dep_minute = dep_time %%  100
  )
```

## Pipe

```{r}
# Strive for 
flights |>  
  filter(!is.na(arr_delay), !is.na(tailnum)) |> 
  count(dest)
```

```{r}
# Avoid
flights|>filter(!is.na(arr_delay), !is.na(tailnum))|>count(dest)
```

```{r}
# Strive for
flights |>  
  group_by(tailnum) |> 
  summarize(
    delay = mean(arr_delay, na.rm = TRUE),
    n = n()
  )
```

```{r}
# Avoid
flights |>
  group_by(
    tailnum
  ) |> 
  summarize(delay = mean(arr_delay, na.rm = TRUE), n = n())
```

```{r}
# Strive for 
flights |>  
  group_by(tailnum) |> 
  summarize(
    delay = mean(arr_delay, na.rm = TRUE),
    n = n()
  )
```

```{r}
# Avoid
flights|>
  group_by(tailnum) |> 
  summarize(
             delay = mean(arr_delay, na.rm = TRUE), 
             n = n()
           )
```

```{r}
# Avoid
flights|>
  group_by(tailnum) |> 
  summarize(
  delay = mean(arr_delay, na.rm = TRUE), 
  n = n()
  )
```

```{r}
df <- tibble(x = 1:5, z = 10:14)

# This fits compactly on one line
df |> mutate(y = x + 1) |> 
  relocate(y, .before = z)
```

```{r}
# While this takes up 4x as many lines, it's easily extended to 
# more variables and more steps in the future
df |> 
  mutate(
    y = x + 1
  ) |> 
  relocate(y, .before = z)
```

## ggplot

```{r}
flights |> 
  group_by(month) |> 
  summarize(
    delay = mean(arr_delay, na.rm = TRUE)
  ) |> 
  ggplot(aes(x = month, y = delay)) +
  geom_point() + 
  geom_line()
```

```{r}
flights |> 
  group_by(dest) |> 
  summarize(
    distance = mean(distance),
    speed = mean(distance / air_time, na.rm = TRUE)
  ) |> 
  ggplot(aes(x = distance, y = speed)) +
  geom_smooth(
    method = "loess",
    span = 0.5,
    se = FALSE, 
    color = "white", 
    linewidth = 4
  ) +
  geom_point()
```

## **Sectioning comments**

```{r}
# Load data --------------------------------------

# Plot data --------------------------------------
```

## Exercises

```{r}
# 1
flights|>filter(dest=="IAH")|>group_by(year,month,day)|>summarize(n=n(),
delay=mean(arr_delay,na.rm=TRUE))|>filter(n>10)
```

```{r}
flights|>filter(carrier=="UA",dest%in%c("IAH","HOU"),sched_dep_time>
0900,sched_arr_time<2000)|>group_by(flight)|>summarize(delay=mean(
arr_delay,na.rm=TRUE),cancelled=sum(is.na(arr_delay)),n=n())|>filter(n>10)
```

```{r}
# 1
# a
flights |> 
  filter(dest == "IAH") |> 
  group_by(year, month, day) |> 
  summarize(
    delay = mean(arr_delay, na.rm = TRUE),
    n = n(),
    .groups = "keep")
```

```{r}
# b
flights |> 
  filter(carrier == "UA",
         dest %in% c("IAH", "HOU"),
         sched_dep_time > 0900,
         sched_arr_time < 2000) |> 
  group_by(
    flight
  ) |> 
  summarize(
    delay = mean(arr_delay, na.rm = TRUE),
    cancelled = sum(is.na(arr_delay)),
    n = n()) |> 
  filter(n > 10)
```
