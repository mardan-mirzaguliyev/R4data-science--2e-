---
title: "Chapter 18 - Missing values"
author: "Mardan Mirzaguliyev"
format: html
editor: visual
date: 2023/12/18
---

# Missing values

```{r}
library(tidyverse)
library(nycflights13)
```

## Explicit missing values

### Last observation carried forward

```{r}
treatment <- tribble(
  ~person,            ~treatment, ~response,
  "Derrick Whitmore", 1,          7,
  NA,                 2,          10, 
  NA,                 3,          NA,
  "Katherine Burke",  1,          4
)

treatment
```

```{r}
treatment |> 
  fill(everything())
```

### Fixed values

```{r}
x <- c(1, 4, 5, 7, NA)
coalesce(x, 0)
```

```{r}
# Opposite
x <- c(1, 4, 5, 7, -99)
na_if(x, -99)
```

### NaN - **n**ot **a** **n**umber

```{r}
x <- c(NA, NaN)

x * 10

x == 1

is.na(x)
```

```{r}
0 / 0
0 * Inf
Inf - Inf
sqrt(-1)
```

## Implicit missing values

```{r}
stocks <- tibble(
  year = c(
    2020, 2020, 2020, 2020,
    2021, 2021, 2021
    ),
  qtr = c(1, 2, 3, 4, 2,  3, 4), 
  price = c(
    1.88, 0.59, 0.35, NA, 
    0.92, 0.17, 2.66
    )
)
```

This dataset has two missing observations:

-   The `price` in the fourth quarter of 2020 is explicitly missing, because its value is `NA`.

-   The `price` for the first quarter of 2021 is implicitly missing, because it simply does not appear in the dataset.

One way to think about the difference is with this Zen-like koan:

-   An explicit missing value is the presence of an absence.

-   An implicit missing value is the absence of a presence.

### Pivoting

```{r}
stocks |> 
  pivot_wider(
    names_from = qtr,
    values_from = price
  )
```

### Complete

```{r}
stocks |> 
  complete(year, qtr)
```

```{r}
stocks |> 
  complete(year = 2019:2021, qtr)
```

```{r}
stocks |> 
  complete(year = full_seq(year, 1), qtr)
```

### Joins

```{r}
flights |> 
  distinct(faa = dest) |> 
  anti_join(airports)
```

```{r}
flights |> 
  distinct(tailnum) |> 
  anti_join(planes)
```

### Exercises

```{r}
# 1
flights |> 
  select(carrier, tailnum) |> 
  distinct(carrier, tailnum) |> 
  anti_join(planes) |>
  ggplot(aes(x = fct_infreq(carrier))) +
  geom_bar()
```

```{r}
flights |> 
  select(carrier, tailnum) |> 
  distinct(carrier, tailnum) |> 
  anti_join(planes) |> 
  group_by(carrier) |> 
  summarize(n = n()) |> 
  arrange(desc(n))
```

```{r}
missing_planes <- flights |> 
  distinct(tailnum) |> 
  anti_join(planes)

# Join with flights data to get carrier information
flights |> 
  semi_join(missing_planes, by = "tailnum") |> 
  select(tailnum, carrier) |> 
  distinct()
```

## Factors and empty groups

A final type of missingness is the empty group, a group that doesn't contain any observations, which can arise when working with factors.

```{r}
health <- tibble(
  name = c("Ikaia", "Oletta", "Leriah", 
           "Dashay", "Tresaun"),
  smoker = factor(c("no", "no", "no",
                    "no", "no"), 
                  levels = c("yes", "no")),
  age = c(34, 88, 75, 47, 56)
)
```

```{r}
health |> count(smoker)
```

```{r}
health |> count(smoker, .drop = FALSE)
```

```{r}
ggplot(health, aes(x = smoker)) +
  geom_bar() +
  scale_x_discrete()
```

```{r}
ggplot(health, aes(x = smoker)) +
  geom_bar() +
  scale_x_discrete(drop = FALSE)
```

```{r}
health |> 
  group_by(smoker, .drop = FALSE) |> 
  summarize(
    n = n(),
    mean_age = mean(age),
    min_age = min(age),
    max_age = max(age),
    sd_age = sd(age)
  )
```

```{r}
# A vector containing two missing values
x1 <- c(NA, NA)
length(x1)
```

```{r}
# A vector containing nothing
x2 <- numeric()
length(x2)
```

All summary functions work with zero-length vectors, but they may return results that are surprising at first glance. Here we see `mean(age)` returning `NaN` because `mean(age)` = `sum(age)/length(age)` which here is 0/0. `max()` and `min()` return -Inf and Inf for empty vectors so if you combine the results with a non-empty vector of new data and recompute you'll get the minimum or maximum of the new data.

```{r}
health |> 
  group_by(smoker) |> 
  summarize(
    n = n(),
    mean_age = mean(age),
    min_age = min(age),
    max_age = max(age),
    sd_age = sd(age)
  ) |> 
  complete(smoker)
```
